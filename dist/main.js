(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var a=t(537),o=t.n(a),A=t(645),r=t.n(A)()(o());r.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@900&display=swap);"]),r.push([n.id,"/* ========== START Dark Mode Colors ========== */\n:root {\n    --primary: rgb(24, 26, 27);\n    --secondary: #2B2F31;\n    --text: #d8d4cf;\n    --blue: #004daa;\n    --caption: #e8e6e3;\n}\n\n/* ========== END Dark Mode Colors ========== */\n/* ========== START CSS Reset ========== */\nhtml {\n    box-sizing: border-box;\n    font-size: 14px;\n}\n\n*,\n*:before,\n*:after {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nol,\nul {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n}\n\nol,\nul {\n    list-style: none;\n}\n\nimg {\n    max-width: 100%;\n    height: auto;\n}\n\n/* ========== END CSS Reset ========== */\n\n\n\nbody {\n    color: var(--text);\n    background-color: var(--primary);\n    display: flex;\n    flex-direction: column;\n    padding: 16px;\n    height: 100vh;\n}\n\nh1 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: auto;\n\n    font-family: 'Montserrat', sans-serif;\n\n}\n\nheader {\n    display: flex;\n    justify-content: end;\n    align-content: center;\n    gap: 5px;\n    padding: 16px;\n}\n\nbutton {\n    width: 120px;\n    /* height: 50px; */\n    background-color: var(--blue);\n    border: none;\n    background-color: rgba(0, 0, 0, 0);\n    color: var(--text);\n    font-size: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 16px;\n}\n\nbutton:hover {\n    background-color: var(--secondary);\n}\n\n\nbutton:active {\n    background-color: rgba(0, 0, 0, 0);\n}\n.selected {\n    border-bottom: 1px solid white;\n}\n\n#contenet {\n    width: 100%;\n    height: 100%;\n}\n\n#img-container {\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: -1;\n    animation: fade-in-fwd 5s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\n\n\n}\n\nimg {\n    z-index: -1;\n\n\n}\n\n#img-container > p {\n    position: fixed;\n    bottom: 100px;\n    font-size: 32px;\n}\n\n#menu-container {\n    display: flex;\n    flex-direction: column;\n    gap: 16PX;\n}\n.menu-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 600px;\n    height: 100px;\n    border: 1px solid var(--blue);\n    animation: slide-in-left 2s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n\n\n    \n\n}\n\n.menu-item > img {\n    width: 130px;\n    height: 100%;\n}\n\n.menu-item > p {\n    font-size: 24px;\n    border: 1px solid var(--secondary);\n    height: 100%;\n    width: 200px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: 1;\n}\n\n\n#contact-container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 16px;\n    z-index: -1;\n}\n\n#contact-container > p {\n    width: 500px;\n    font-size: 24px;\n    border: 1px solid var(--secondary);\n    padding: 16px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    animation: slide-in-top 2s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n\n}\n\n\n#contact-container > p > img {\n    /* background-color: rgba(184, 0, 0, 0); */\n    display: block;\n    margin-right: auto;\n    width: 100px;\n    \n}\n\na {\n    color: var(--text);\n    text-decoration: none;\n}\n\n\n\n  @keyframes slide-in-left {\n    0% {\n      -webkit-transform: translateX(-1000px);\n              transform: translateX(-1000px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateX(0);\n              transform: translateX(0);\n      opacity: 1;\n    }\n  }\n  \n  @keyframes fade-in-fwd {\n    0% {\n      -webkit-transform: translateZ(-80px);\n              transform: translateZ(-80px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateZ(0);\n              transform: translateZ(0);\n      opacity: 1;\n    }\n  }\n  \n  @keyframes slide-in-top {\n    0% {\n      transform: translateY(-1000px);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA,iDAAiD;AACjD;IACI,0BAA0B;IAC1B,oBAAoB;IACpB,eAAe;IACf,eAAe;IACf,kBAAkB;AACtB;;AAEA,+CAA+C;AAC/C,0CAA0C;AAC1C;IACI,sBAAsB;IACtB,eAAe;AACnB;;AAEA;;;IAGI,mBAAmB;IACnB,SAAS;IACT,UAAU;AACd;;AAEA;;;;;;;;;;IAUI,SAAS;IACT,UAAU;IACV,mBAAmB;AACvB;;AAEA;;IAEI,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA,wCAAwC;;;;AAIxC;IACI,kBAAkB;IAClB,gCAAgC;IAChC,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;;IAElB,qCAAqC;;AAEzC;;AAEA;IACI,aAAa;IACb,oBAAoB;IACpB,qBAAqB;IACrB,QAAQ;IACR,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,6BAA6B;IAC7B,YAAY;IACZ,kCAAkC;IAClC,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,kCAAkC;AACtC;;;AAGA;IACI,kCAAkC;AACtC;AACA;IACI,8BAA8B;AAClC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,eAAe;IACf,MAAM;IACN,OAAO;IACP,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,WAAW;IACX,uEAAuE;;;AAG3E;;AAEA;IACI,WAAW;;;AAGf;;AAEA;IACI,eAAe;IACf,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,aAAa;IACb,6BAA6B;IAC7B,yEAAyE;;;;;AAK7E;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,kCAAkC;IAClC,YAAY;IACZ,YAAY;;IAEZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,OAAO;AACX;;;AAGA;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,YAAY;IACZ,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,SAAS;IACT,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,kCAAkC;IAClC,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,wEAAwE;;AAE5E;;;AAGA;IACI,0CAA0C;IAC1C,cAAc;IACd,kBAAkB;IAClB,YAAY;;AAEhB;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;AACzB;;;;EAIE;IACE;MACE,sCAAsC;cAC9B,8BAA8B;MACtC,UAAU;IACZ;IACA;MACE,gCAAgC;cACxB,wBAAwB;MAChC,UAAU;IACZ;EACF;;EAEA;IACE;MACE,oCAAoC;cAC5B,4BAA4B;MACpC,UAAU;IACZ;IACA;MACE,gCAAgC;cACxB,wBAAwB;MAChC,UAAU;IACZ;EACF;;EAEA;IACE;MACE,8BAA8B;MAC9B,UAAU;IACZ;IACA;MACE,wBAAwB;MACxB,UAAU;IACZ;EACF",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@900&display=swap');\n\n/* ========== START Dark Mode Colors ========== */\n:root {\n    --primary: rgb(24, 26, 27);\n    --secondary: #2B2F31;\n    --text: #d8d4cf;\n    --blue: #004daa;\n    --caption: #e8e6e3;\n}\n\n/* ========== END Dark Mode Colors ========== */\n/* ========== START CSS Reset ========== */\nhtml {\n    box-sizing: border-box;\n    font-size: 14px;\n}\n\n*,\n*:before,\n*:after {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nol,\nul {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n}\n\nol,\nul {\n    list-style: none;\n}\n\nimg {\n    max-width: 100%;\n    height: auto;\n}\n\n/* ========== END CSS Reset ========== */\n\n\n\nbody {\n    color: var(--text);\n    background-color: var(--primary);\n    display: flex;\n    flex-direction: column;\n    padding: 16px;\n    height: 100vh;\n}\n\nh1 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: auto;\n\n    font-family: 'Montserrat', sans-serif;\n\n}\n\nheader {\n    display: flex;\n    justify-content: end;\n    align-content: center;\n    gap: 5px;\n    padding: 16px;\n}\n\nbutton {\n    width: 120px;\n    /* height: 50px; */\n    background-color: var(--blue);\n    border: none;\n    background-color: rgba(0, 0, 0, 0);\n    color: var(--text);\n    font-size: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 16px;\n}\n\nbutton:hover {\n    background-color: var(--secondary);\n}\n\n\nbutton:active {\n    background-color: rgba(0, 0, 0, 0);\n}\n.selected {\n    border-bottom: 1px solid white;\n}\n\n#contenet {\n    width: 100%;\n    height: 100%;\n}\n\n#img-container {\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: -1;\n    animation: fade-in-fwd 5s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\n\n\n}\n\nimg {\n    z-index: -1;\n\n\n}\n\n#img-container > p {\n    position: fixed;\n    bottom: 100px;\n    font-size: 32px;\n}\n\n#menu-container {\n    display: flex;\n    flex-direction: column;\n    gap: 16PX;\n}\n.menu-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 600px;\n    height: 100px;\n    border: 1px solid var(--blue);\n    animation: slide-in-left 2s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n\n\n    \n\n}\n\n.menu-item > img {\n    width: 130px;\n    height: 100%;\n}\n\n.menu-item > p {\n    font-size: 24px;\n    border: 1px solid var(--secondary);\n    height: 100%;\n    width: 200px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: 1;\n}\n\n\n#contact-container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 16px;\n    z-index: -1;\n}\n\n#contact-container > p {\n    width: 500px;\n    font-size: 24px;\n    border: 1px solid var(--secondary);\n    padding: 16px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    animation: slide-in-top 2s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n\n}\n\n\n#contact-container > p > img {\n    /* background-color: rgba(184, 0, 0, 0); */\n    display: block;\n    margin-right: auto;\n    width: 100px;\n    \n}\n\na {\n    color: var(--text);\n    text-decoration: none;\n}\n\n\n\n  @keyframes slide-in-left {\n    0% {\n      -webkit-transform: translateX(-1000px);\n              transform: translateX(-1000px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateX(0);\n              transform: translateX(0);\n      opacity: 1;\n    }\n  }\n  \n  @keyframes fade-in-fwd {\n    0% {\n      -webkit-transform: translateZ(-80px);\n              transform: translateZ(-80px);\n      opacity: 0;\n    }\n    100% {\n      -webkit-transform: translateZ(0);\n              transform: translateZ(0);\n      opacity: 1;\n    }\n  }\n  \n  @keyframes slide-in-top {\n    0% {\n      transform: translateY(-1000px);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }"],sourceRoot:""}]);const i=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,A){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(a)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(r[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);a&&r[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),A="/*# ".concat(o," */"),r=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(r).concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var A={},r=[],i=0;i<n.length;i++){var c=n[i],s=a.base?c[0]+a.base:c[0],l=A[s]||0,d="".concat(s," ").concat(l);A[s]=l+1;var p=t(d),C={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(C);else{var u=o(C,a);a.byIndex=i,e.splice(i,0,{identifier:d,updater:u,references:1})}r.push(d)}return r}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var A=a(n=n||[],o=o||{});return function(n){n=n||[];for(var r=0;r<A.length;r++){var i=t(A[r]);e[i].references--}for(var c=a(n,o),s=0;s<A.length;s++){var l=t(A[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}A=c}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var A=e[a]={id:a,exports:{}};return n[a](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");a.length&&(n=a[a.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),a=t(795),o=t.n(a),A=t(569),r=t.n(A),i=t(565),c=t.n(i),s=t(216),l=t.n(s),d=t(589),p=t.n(d),C=t(426),u={};u.styleTagTransform=p(),u.setAttributes=c(),u.insert=r().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=l(),e()(C.Z,u),C.Z&&C.Z.locals&&C.Z.locals;const f=t.p+"bc3c2ac6351264d8b115.jpg",m=function(){const n=document.createElement("div");n.id="img-container";const e=document.createElement("img");e.src=f;const t=document.createElement("p");return t.textContent="We have the best coffee around!",n.appendChild(e),n.appendChild(t),n},h=t.p+"abc60757dad333490bc1.jpg",g=t.p+"ae275a92d557ba812e34.jpg",I=t.p+"88a9e5397f17aedc2b33.jpg",b=t.p+"c9381d3098c62c5ee8ca.png";function x(n){if("selected"!==n.target.classList[0]){B.textContent="";for(const n of y)n.classList.remove("selected");n.target.classList.add("selected"),"home-button"===n.target.id?B.appendChild(m()):"menu-button"===n.target.id?B.appendChild(function(){const n=[{img:h,name:"Black Coffee",price:20},{img:g,name:"Espresso",price:16},{img:I,name:"Milkshake",price:10}],e=document.createElement("div");e.id="menu-container";for(const t of n){let n=document.createElement("div");n.classList.add("menu-item");let a=document.createElement("img");a.src=t.img;let o=document.createElement("p");o.classList.add("name-para"),o.textContent=t.name;let A=document.createElement("p");A.classList.add("price-para"),A.textContent=t.price+"$",n.appendChild(a),n.appendChild(o),n.appendChild(A),e.appendChild(n)}return e}()):"contact-button"===n.target.id&&B.appendChild(function(){const n=document.createElement("div");n.id="contact-container";const e=document.createElement("p"),t=document.createElement("img");t.src=b,e.appendChild(t),e.textContent="+1243422325";const a=document.createElement("p");return a.innerHTML='<a href="https://www.facebook.com">Facebook.com/xyz</a>',n.appendChild(e),n.appendChild(a),n}())}}const B=document.querySelector("#content");B.appendChild(m());const y=document.querySelectorAll("header > button");for(const n of y)n.addEventListener("click",(n=>x(n)))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,